{"version":3,"sources":["../../../../assets/scripts/assets/scripts/game.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/scripts","sourcesContent":["const {ccclass, property} = cc._decorator;\nimport { BLOCK_ARRAY, INIT_NUMBERS } from './commons/constants';\nimport { randomRangeInt } from './commons/utils';\n\n@ccclass\nexport default class Game extends cc.Component {\n\n    @property({\n        type: cc.Label,\n        tooltip: '分数展示Label节点'\n    })\n    public scoreLabel:cc.Label = null;\n\n    @property(cc.Integer)\n    private score:number = 0;\n\n    @property(cc.Prefab)\n    public blockPrefab:cc.Prefab = null;\n\n    @property(cc.Integer)\n    public blockGap:number = 20;\n\n    @property(cc.Node)\n    public bgNode:cc.Node = null;\n\n    @property({\n        type: cc.Integer,\n        tooltip: '允许初始化带数字的块的个数'\n    })\n    public initNumberBlocksCounts:number = 3;\n\n    private _blockSize:number = 0;\n\n    // 维护每一块的位置\n    private _blocksPos:Array<Array<any>> = new Array<Array<any>>();\n    // 维护每一块的节点\n    private _blocksNodes:Array<Array<any>> = new Array<Array<any>>();\n\n    protected start () {\n        this.init();\n    }\n\n    /**\n     * @description: 初始化页面\n     */\n    private init = () => {\n        this.initScore();\n        if (this._blocksNodes.length > 0) {\n            this.resetBlocks();\n        } else {\n            this.initBlocks();\n        }\n        this.initNumberBlocks();\n    }\n\n    /**\n     * @description: 初始化带数字的块\n     */\n    private initNumberBlocks = () => {\n        const emptyBlocks: Array<cc.Node> = this.findEmptyBlocks();\n        for (let i = 0; i < this.initNumberBlocksCounts; i++) {\n            const removeItemIndex = this.addNumberBlock(emptyBlocks);\n            emptyBlocks.splice(removeItemIndex, 1);\n        }\n    }\n\n    /**\n     * @description: 初始化分数\n     */\n    private initScore = () => {\n        this.setScore(0);\n    }\n\n    /**\n     * @description: 初始化色块\n     */\n    private initBlocks = () => {\n        this._blockSize = (cc.winSize.width - this.blockGap * 5)/4;\n        BLOCK_ARRAY.forEach((itemArray, indexOut) => {\n            this._blocksPos[indexOut] = [];\n            this._blocksNodes[indexOut] = [];\n            const blockPosY:number = this._blockSize * (indexOut + 1) + this.blockGap * indexOut;\n            itemArray.forEach((item, indexInner) => {\n                const blockPosX:number = this.blockGap * (indexInner + 1) + this._blockSize * (indexInner + 0.5);\n                this._blocksPos[indexOut][indexInner] = cc.v2(blockPosX, blockPosY);\n                this._blocksNodes[indexOut][indexInner] = this.drawBlockPrefab(blockPosX, blockPosY);\n            })\n        });\n\n        cc.log(this._blocksPos)\n        cc.log(this._blocksNodes);\n    }\n\n    /**\n     * @description: 重置所有块为初始化状态\n     */\n    private resetBlocks = () => {\n        this._blocksNodes && this._blocksNodes.forEach(item => {\n            item.forEach(node => {\n                const comp = node.getComponent('block');\n                comp._number > 0 && comp.setNumber(0);\n            });\n        })\n    }\n\n    /**\n     * @description: 添加数字不为0的块\n     * @param emptyBlocks: 空节点数组列表\n     * @returns 本次被占用的空节点的下标\n     */\n    private addNumberBlock = (emptyBlocks: Array<cc.Node>):number => {\n        const removeItemIndex = randomRangeInt(0, emptyBlocks.length);\n        const node = emptyBlocks[removeItemIndex];\n        node.getComponent('block').setNumber(INIT_NUMBERS[randomRangeInt(0, INIT_NUMBERS.length)]);\n        return removeItemIndex;\n    }\n\n    /**\n     * @description: 更新分数方法\n     * @param score: 分数值\n     */\n    private setScore = (score: number) => {\n        this.score = score;\n        this.scoreLabel.string = `分数：${score}`;\n    }\n\n    /**\n     * @description: 单个色块的生成函数\n     * @param blockPosX: 单个色块的横坐标\n     * @param blockPosY: 单个色块的纵坐标\n     */\n    private drawBlockPrefab = (blockPosX:number, blockPosY:number): cc.Node => {\n        const block = cc.instantiate(this.blockPrefab);\n        block.width = this._blockSize;\n        block.height = this._blockSize;\n        block.setPosition(cc.v2(blockPosX, blockPosY));\n        this.bgNode.addChild(block);\n        block.getComponent('block').setNumber(0);\n        return block;\n    }\n\n    /**\n     * @description: 返回当前数值为0的块组成的数组\n     */\n    private findEmptyBlocks = ():Array<cc.Node> => {\n        const emptyBlocksArray:Array<cc.Node> = [];\n        this._blocksNodes.forEach(array => {\n            array.forEach(node => {\n                const comp = node.getComponent('block');\n                if (comp._number === 0) {\n                    emptyBlocksArray.push(node);\n                }\n            })\n        })\n        return emptyBlocksArray;\n    }\n}\n\n"]}